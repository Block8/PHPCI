parameters:
    application.name: PHPCI
    application.version: 1.7-dev
    config_file: PHPCI/config.yml
    storage.factory: b8\Store\Factory
    console.log_file: logs/console.log
    console.max_logs: 30

services:
    storage.user:
        class:   PHPCI\Store\UserStore
        factory: [%storage.factory%, getStore]
        arguments:
            - User
    storage.project:
        class:   PHPCI\Store\ProjectStore
        factory: [%storage.factory%, getStore]
        arguments:
            - Project
    storage.build:
        class:   PHPCI\Store\BuildStore
        factory: [%storage.factory%, getStore]
        arguments:
            - Build
    storage.build_meta:
        class:   PHPCI\Store\BuildMetaStore
        factory: [%storage.factory%, getStore]
        arguments:
            - BuildMeta
    http.request:
        class:      b8\Http\Request
        arguments:  []
    http.response:
        class:      b8\Http\Response
        arguments:  []
    http_client.github:
        class:      b8\HttpClient
        arguments:
          - https://api.github.com
    http_client.shields:
        class:      b8\HttpClient
        arguments:
          - http://img.shields.io
    config:
        class:      PHPCI\Config
        arguments:  [%config_file%]
    application:
        class:      PHPCI\Application
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.user
          - @storage.project
          - @service_container
    application.controller.home:
        class:      PHPCI\Controller\HomeController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.build
          - @storage.project
    application.controller.project:
        class:      PHPCI\Controller\ProjectController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.build
          - @storage.project
          - @service.project
          - @service.build
    application.controller.build:
        class:      PHPCI\Controller\BuildController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.build
          - @service.build
    application.controller.buildstatus:
        class:      PHPCI\Controller\BuildStatusController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.build
          - @storage.project
          - @http_client.shields
    application.controller.user:
        class:      PHPCI\Controller\UserController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.user
          - @service.user
    application.controller.session:
        class:      PHPCI\Controller\SessionController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.user
    application.controller.settings:
        class:      PHPCI\Controller\SettingsController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.user
          - @service.user
    application.controller.plugin:
        class:      PHPCI\Controller\PluginController
        arguments:
          - @config
          - @http.request
          - @http.response
    application.controller.webhook:
        class:      PHPCI\Controller\WebhookController
        arguments:
          - @config
          - @http.request
          - @http.response
          - @storage.build
          - @storage.project
          - @service.build
    service.build:
        class:      PHPCI\Service\BuildService
        arguments:  [@storage.build]
    service.user:
        class:      PHPCI\Service\UserService
        arguments:  [@storage.user]
    service.project:
        class:      PHPCI\Service\ProjectService
        arguments:  [@storage.project]
    process_control:
        factory: [PHPCI\ProcessControl\Factory, getInstance]
    console.application:
        class:      Symfony\Component\Console\Application
        arguments:
          - %application.name%
          - %application.version%
        calls:
          - [add, ['@console.command.run']]
          - [add, ['@console.command.rebuild']]
          - [add, ['@console.command.install']]
          - [add, ['@console.command.update']]
          - [add, ['@console.command.generate']]
          - [add, ['@console.command.daemon']]
          - [add, ['@console.command.poll']]
          - [add, ['@console.command.create_admin']]
          - [add, ['@console.command.create_build']]
    daemon.application:
        class:      Symfony\Component\Console\Application
        arguments:
          - %application.name%
          - %application.version%
        calls:
          - [add, ['@console.command.daemon']]
    console.logger:
        class:      Monolog\Logger
        arguments:
          - cli
          -
            - @console.logger.handlers.output
            - @console.logger.handlers.file
    console.output:
        class:      Symfony\Component\Console\Output\ConsoleOutput
    console.logger.handlers.output:
        class:      PHPCI\Logging\OutputLogHandler
        arguments:
          - @console.output
    console.logger.handlers.file:
        class:      Monolog\Handler\RotatingFileHandler
        arguments:
          - %console.log_file%
          - %console.max_logs%
    console.command.run:
        class:      PHPCI\Command\RunCommand
        arguments:
          - @console.logger
    console.command.rebuild:
        class:      PHPCI\Command\RebuildCommand
        arguments:
          - @console.logger
          - @storage.build
          - @service.build
          - @console.command.run
    console.command.update:
        class:      PHPCI\Command\UpdateCommand
        arguments:
          - @console.logger
          - @config
    console.command.daemon:
        class:      PHPCI\Command\DaemonCommand
        arguments:
          - @console.logger
          - @process_control
    console.command.poll:
        class:      PHPCI\Command\PollCommand
        arguments:
          - @config
          - @console.logger
          - @storage.build
          - @storage.project
          - @http_client.github
    console.command.create_admin:
        class:      PHPCI\Command\CreateAdminCommand
        arguments:
          - @service.user
    console.command.create_build:
        class:      PHPCI\Command\CreateBuildCommand
        arguments:
          - @storage.project
          - @service.build
    console.command.install:
        class:      PHPCI\Command\InstallCommand
    console.command.generate:
        class:      PHPCI\Command\GenerateCommand
